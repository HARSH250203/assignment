<launch>
  <!--  URDF file into the parameter server -->
  <param name="robot_description" command="$(find xacro)/xacro $(find bot_des)/urdf/u_bot_urdf.urdf" />

  <!-- controller configuration file -->
  <rosparam file="$(find bot_des)/config/diff_drive_controller.yaml" command="load"/>

  <!-- robot state publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>

  <!-- the joint state publisher GUI -->
  <node name="joint_state_publisher_gui" pkg="joint_state_publisher" type="joint_state_publisher"/>

  <!-- Spawn the robot in Gazebo using the URDF format -->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" output="screen" args="-param robot_description -model u_bot_urdf -urdf" />
  
  <!-- Spawn the diff drive controller -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
        args="diff_drive_controller"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch" /> 
  <!-- Start the Gazebo ROS control plugin -->
  <node name="gazebo_ros_control" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model u_bot_urdf" />

  <!-- Start the controller manager and spawn the differential drive controller -->
  <node name="$(anon controller_spawner)" pkg="controller_manager" type="spawner" args="diff_drive_controller joint_state_controller right_wheel_velocity_controller left_wheel_velocity_controller" output="screen" />

  <!-- Start the teleop_twist_keyboard node -->
  <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop_twist_keyboard" output="screen">
    <remap from="cmd_vel" to="/cmd_vel" />
  <!-- Start the Gazebo empty world -->
  
  </node>
</launch>

